// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model Account {
  id                Int  @id @default(autoincrement())
  userId            Int  
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? 
  access_token      String? 
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? 
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id                     Int  @id @default(autoincrement())
  name           String
  email          String    @unique
  image          String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  accounts               Account[]
  buckets Bucket[]

}

model Images {
  id Int  @id @default(autoincrement())
  url String
  filename String
  bucket Bucket @relation(fields: [bucketId], references: [id], onDelete: Cascade)
  bucketId Int
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model Bucket {
  id Int  @id @default(autoincrement())
  name String
  images Images[]
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}
