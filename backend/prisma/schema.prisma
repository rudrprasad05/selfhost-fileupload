generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                Int     @id @default(autoincrement())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  User              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId], map: "Account_userId_fkey")
}

model Bucket {
  id        Int      @id @default(autoincrement())
  name      String
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  Images    Images[]

  @@index([userId], map: "Bucket_userId_fkey")
}

model Images {
  id        Int      @id @default(autoincrement())
  url       String   @db.VarChar(255)
  filename  String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  bucketId  Int
  Bucket    Bucket   @relation(fields: [bucketId], references: [id], onDelete: Cascade)

  @@index([bucketId], map: "Images_bucketId_fkey")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  image     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime @updatedAt
  Account   Account[]
  Bucket    Bucket[]
}
